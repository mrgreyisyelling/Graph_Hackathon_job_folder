(()=>{"use strict";var e={197:e=>{e.exports=require("obsidian")},668:function(e,t,n){var o=this&&this.__awaiter||function(e,t,n,o){return new(n||(n=Promise))((function(r,a){function i(e){try{s(o.next(e))}catch(e){a(e)}}function l(e){try{s(o.throw(e))}catch(e){a(e)}}function s(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,l)}s((o=o.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.mergeKnowledgeGraphs=function(e,t,n,a){return o(this,void 0,void 0,(function*(){console.log(`üîÑ Merging KGs: ${t} + ${n} ‚Üí ${a}`);const o=e.vault.getAbstractFileByPath((0,r.normalizePath)(t)),i=e.vault.getAbstractFileByPath((0,r.normalizePath)(n));if(o||console.warn(`‚ö†Ô∏è Primary knowledge graph not found at: ${t}`),i||console.warn(`‚ö†Ô∏è Secondary knowledge graph not found at: ${n}`),!(o instanceof r.TFile&&i instanceof r.TFile))return void console.error("‚ùå Could not find knowledge graph files. Aborting merge.");const l=JSON.parse(yield e.vault.read(o)),s=JSON.parse(yield e.vault.read(i));console.log("üìú Primary Data:",l),console.log("üìú Secondary Data:",s);let u=[];l.forEach((e=>{const t=s.find((t=>t.entity===e.entity&&t.attribute===e.attribute));t&&t.value!==e.value?(u.push({entity:e.entity,attribute:e.attribute,value:e.value,version:"master_version"}),u.push({entity:e.entity,attribute:e.attribute,value:t.value,version:"live_version"})):u.push(Object.assign(Object.assign({},e),{version:"master_version"}))}));const c=e.vault.getAbstractFileByPath((0,r.normalizePath)(a));c instanceof r.TFile?yield e.vault.modify(c,JSON.stringify(u,null,2)):(console.log(`üìÅ Creating new KG file: ${a}`),yield e.vault.create((0,r.normalizePath)(a),JSON.stringify(u,null,2))),console.log("‚úÖ Merged KG saved.")}))};const r=n(197)}},t={},n=function n(o){var r=t[o];if(void 0!==r)return r.exports;var a=t[o]={exports:{}};return e[o].call(a.exports,a,a.exports,n),a.exports}(668),o=exports;for(var r in n)o[r]=n[r];n.__esModule&&Object.defineProperty(o,"__esModule",{value:!0})})();