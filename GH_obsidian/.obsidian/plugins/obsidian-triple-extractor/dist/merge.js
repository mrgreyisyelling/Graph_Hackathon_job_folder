(()=>{"use strict";var t={197:t=>{t.exports=require("obsidian")},668:function(t,e,n){var i=this&&this.__awaiter||function(t,e,n,i){return new(n||(n=Promise))((function(r,a){function o(t){try{u(i.next(t))}catch(t){a(t)}}function l(t){try{u(i.throw(t))}catch(t){a(t)}}function u(t){var e;t.done?r(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(o,l)}u((i=i.apply(t,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0}),e.mergeKnowledgeGraphs=function(t,e,n,a){return i(this,void 0,void 0,(function*(){const i=t.vault.getAbstractFileByPath((0,r.normalizePath)(e)),o=t.vault.getAbstractFileByPath((0,r.normalizePath)(n));if(!(i instanceof r.TFile&&o instanceof r.TFile))return void console.error("Could not find knowledge graph files.");const l=JSON.parse(yield t.vault.read(i)),u=JSON.parse(yield t.vault.read(o));let s=[];l.forEach((t=>{const e=u.find((e=>e.entity===t.entity&&e.attribute===t.attribute));e&&e.value!==t.value?(s.push({entity:t.entity,attribute:t.attribute,value:t.value,version:"master_version"}),s.push({entity:t.entity,attribute:t.attribute,value:e.value,version:"live_version"})):s.push(t)}));const c=t.vault.getAbstractFileByPath((0,r.normalizePath)(a));c instanceof r.TFile?yield t.vault.modify(c,JSON.stringify(s,null,2)):yield t.vault.create((0,r.normalizePath)(a),JSON.stringify(s,null,2)),console.log(`Merged knowledge graph saved to ${a}`)}))};const r=n(197)}},e={},n=function n(i){var r=e[i];if(void 0!==r)return r.exports;var a=e[i]={exports:{}};return t[i].call(a.exports,a,a.exports,n),a.exports}(668),i=exports;for(var r in n)i[r]=n[r];n.__esModule&&Object.defineProperty(i,"__esModule",{value:!0})})();